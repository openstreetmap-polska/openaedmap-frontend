name: Deploy to production env

on:
  push:
    branches:
    - main
    paths:
    - src/**
    - public/**
    - package*.json
    - .github/workflows/deploy_production.yml

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Setup Node JS
      uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm install
    - name: Run TypeScript typecheck
      run: npm run typecheck
    - name: Run tests
      run: npm run test
    - name: Build app
      env:
        NODE_ENV: production
        REACT_APP_OSM_API_URL: ${{ secrets.REACT_APP_OSM_API_URL }}
        REACT_APP_OSM_OAUTH2_CLIENT_ID: ${{ secrets.REACT_APP_OSM_OAUTH2_CLIENT_ID }}
        REACT_APP_OSM_OAUTH2_CLIENT_SECRET: ${{ secrets.REACT_APP_OSM_OAUTH2_CLIENT_SECRET }}
      run: npm run build
    - name: Send to AWS S3 bucket and invalidate cache
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: eu-west-1
        AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
      run: |
        set -e

        if [ -z "$AWS_S3_BUCKET" ]; then
          echo "AWS_S3_BUCKET is not set. Quitting."
          exit 1
        fi

        if [ -z "$AWS_ACCESS_KEY_ID" ]; then
          echo "AWS_ACCESS_KEY_ID is not set. Quitting."
          exit 1
        fi

        if [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
          echo "AWS_SECRET_ACCESS_KEY is not set. Quitting."
          exit 1
        fi

        if [ -z "$AWS_REGION" ]; then
          echo "AWS_REGION is not set. Quitting."
          exit 1
        fi

        if [ -z "$AWS_CLOUDFRONT_DISTRIBUTION_ID" ]; then
          echo "AWS_CLOUDFRONT_DISTRIBUTION_ID is not set. Quitting."
          exit 1
        fi

        # Create a dedicated profile for this action to avoid conflicts
        # with past/future actions.
        aws configure --profile react-deploy-to-s3-action <<-EOF > /dev/null 2>&1
        ${AWS_ACCESS_KEY_ID}
        ${AWS_SECRET_ACCESS_KEY}
        ${AWS_REGION}
        text
        EOF

        aws s3 sync build/ s3://${AWS_S3_BUCKET}/ \
          --profile react-deploy-to-s3-action \
          --no-progress

        aws cloudfront create-invalidation \
          --distribution-id ${AWS_CLOUDFRONT_DISTRIBUTION_ID} \
          --paths /\*

        aws configure --profile react-deploy-to-s3-action <<-EOF > /dev/null 2>&1
        null
        null
        null
        text
        EOF
